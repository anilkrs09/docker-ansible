import os
import subprocess
from datetime import datetime

# Configuration
REPO_DIR = "/path/to/your/clone"  # Jenkins workspace or clone dir
FILENAME = f"generated_file_{datetime.now().strftime('%Y%m%d_%H%M%S')}.txt"
FILE_CONTENT = "This file was generated by a Jenkins pipeline using Python.\n"
COMMIT_MESSAGE = f"Add {FILENAME}"

# Change directory to your repo
os.chdir(REPO_DIR)

# Step 1: Create the file
file_path = os.path.join(REPO_DIR, FILENAME)
with open(file_path, "w") as f:
    f.write(FILE_CONTENT)

# Step 2: Git operations
def run_git_command(command):
    result = subprocess.run(command, shell=True, capture_output=True, text=True)
    if result.returncode != 0:
        print(f"Error running command: {command}\n{result.stderr}")
        raise Exception("Git command failed")
    return result.stdout.strip()

try:
    run_git_command("git add .")
    run_git_command(f'git commit -m "{COMMIT_MESSAGE}"')
    run_git_command("git push origin main")  # or the correct branch
    print(f"Successfully pushed {FILENAME} to GitHub.")
except Exception as e:
    print(f"Failed to push changes: {e}")
