import os
import re

def load_mapping(file_path):
    mapping = {}
    with open(file_path, 'r') as f:
        for line in f:
            if ':' in line:
                key, value = line.strip().split(':', 1)
                mapping[key.strip()] = value.strip()
    return mapping

def replace_placeholders(template_path, mapping, output_path):
    with open(template_path, 'r') as f:
        content = f.read()

    for key, value in mapping.items():
        pattern = r"\{\{\s*" + re.escape(key) + r"\s*\}\}"
        content, count = re.subn(pattern, value, content)
        print(f"[{os.path.basename(output_path)}] Replaced {count} occurrence(s) of '{{{{{key}}}}}' with '{value}'")

    with open(output_path, 'w') as f:
        f.write(content)
    print(f"âœ… Output written to: {output_path}")

def generate_env_configs(template_file, value_files, output_dir="outputs"):
    os.makedirs(output_dir, exist_ok=True)

    for val_file in value_files:
        env_name = os.path.splitext(os.path.basename(val_file))[0]
        mapping = load_mapping(val_file)

        output_file = os.path.join(output_dir, f"{env_name}.yaml")
        replace_placeholders(template_file, mapping, output_file)

if __name__ == "__main__":
    template_file = "template.yaml"
    value_files = [
        "values/dev.txt",
        "values/qa.txt",
        "values/prod.txt"
    ]
    generate_env_configs(template_file, value_files)
